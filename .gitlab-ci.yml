workflow:
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"' # only run if the branch is main

stages:
  - build # CI
  - test # CI
  - deploy_staging # CD
  - test_staging # CD
  - clean_staging
  - deploy_production # CD
  - post_deploy
  - update_feature_flags # 
  
image_build:
  stage: build
  script:
    - echo "Building Docker image for Canario-Shop" # IaC
    - docker build -t canario-shop:$CI_PIPELINE_ID .

code_test:
  stage: test
  script:
    - docker run --rm -v $(pwd)/app:/app -v $(pwd)/static:/app/static -w /app canario-shop:$CI_PIPELINE_ID bash -c "pytest && rm -rf /app/.pytest_cache /app/__pycache__"

deploy_staging:
  stage: deploy_staging
  script:
    - docker run -d -p 8001:80 --name canario-shop-staging-$CI_PIPELINE_ID canario-shop:$CI_PIPELINE_ID 
    - docker logs canario-shop-staging-$CI_PIPELINE_ID


test_staging:
  stage: test_staging
  script:
    - sleep 10 
    - curl http://10.196.38.192:8001  
    #- pytest --base-url=http://10.196.38.192:8001

clean:
   stage: clean_staging
   script:
     - docker stop canario-shop-staging-$CI_PIPELINE_ID
     - docker rm canario-shop-staging-$CI_PIPELINE_ID
   
deploy_production:
  stage: deploy_production
  script:
    - EXISTING_SERVICE_NAME=$(docker service ls | grep "canario-shop-production1" | awk '{print $2}')
    - if [[ ! -z "$EXISTING_SERVICE_NAME" ]]; then 
        echo "Updating existing service $EXISTING_SERVICE_NAME";
        docker service update --image=canario-shop:$CI_PIPELINE_ID --replicas=5 --env-add SHOW_FLASHSALE=$SHOW_FLASHSALE --env-add SHOW_PREMIUM=$SHOW_PREMIUM --env-add SHOW_PROMOTION=$SHOW_PROMOTION --env-add USE_MEMCACHE=$USE_MEMCACHE  $EXISTING_SERVICE_NAME;
        echo "Flags:SHOW_FLASHSALE=$SHOW_FLASHSALE, SHOW_PREMIUM=$SHOW_PREMIUM, SHOW_PROMOTION=$SHOW_PROMOTION, USE_MEMCACHE=$USE_MEMCACHE"

      else 
        echo "Creating new service canario-shop-production1-$CI_PIPELINE_ID";
        docker service create --replicas=2 --name canario-shop-production1-$CI_PIPELINE_ID -p 8003:80 -e SHOW_FLASHSALE=$SHOW_FLASHSALE -e SHOW_PREMIUM=$SHOW_PREMIUM -e SHOW_PROMOTION=$SHOW_PROMOTION -e USE_MEMCACHE=$USE_MEMCACHE -e MEMCACHE_SERVER=10.196.38.192 -e INFO_PORT=8003 -d canario-shop:$CI_PIPELINE_ID;
      fi


    - EXISTING_SERVICE_NAME=$(docker service ls | grep "canario-shop-production2" | awk '{print $2}')
    - if [[ ! -z "$EXISTING_SERVICE_NAME" ]]; then 
        echo "Updating existing service $EXISTING_SERVICE_NAME";
        docker service update  --image=canario-shop:$CI_PIPELINE_ID --replicas=2 --env-add SHOW_FLASHSALE=$SHOW_FLASHSALE --env-add SHOW_PREMIUM=$SHOW_PREMIUM --env-add SHOW_PROMOTION=$SHOW_PROMOTION --env-add USE_MEMCACHE=$USE_MEMCACHE  $EXISTING_SERVICE_NAME;
        echo "Flags:SHOW_FLASHSALE=$SHOW_FLASHSALE, SHOW_PREMIUM=$SHOW_PREMIUM, SHOW_PROMOTION=$SHOW_PROMOTION, USE_MEMCACHE=$USE_MEMCACHE"

      else 
        echo "Creating new service canario-shop-production2-$CI_PIPELINE_ID";
        docker service create --replicas=2 --name canario-shop-production2-$CI_PIPELINE_ID -p 8004:80 -e SHOW_FLASHSALE=$SHOW_FLASHSALE -e SHOW_PREMIUM=$SHOW_PREMIUM -e SHOW_PROMOTION=$SHOW_PROMOTION -e USE_MEMCACHE=$USE_MEMCACHE -e MEMCACHE_SERVER=10.196.38.192 -e INFO_PORT=8004 -d canario-shop:$CI_PIPELINE_ID;
      fi


run-caddy:
  stage: deploy_production
  script:
    - docker stop $(docker ps -q --filter "publish=90")
    - if docker ps -a | grep -q "caddy-"; then 
        docker rm -f $(docker ps -a -q -f "name=caddy-");
      fi
    # Run  new
    - echo "http://:90 {" > Caddyfile
    - echo "  reverse_proxy 10.196.38.192:8003 10.196.38.192:8004" >> Caddyfile
    - echo "}" >> Caddyfile
    - docker pull caddy/caddy:latest
    - docker run -d -p 90:90 --name caddy-$CI_PIPELINE_ID -v $(pwd)/Caddyfile:/etc/caddy/Caddyfile caddy/caddy:latest
  
invalidate_feature_flags_cache:
  stage: post_deploy
  script:
    - curl -X POST http://10.196.38.192:8003/invalidate_cache
    - curl -X POST http://10.196.38.192:8004/invalidate_cache
  when: always # .
  allow_failure: true # 
